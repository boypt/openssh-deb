# This is a basic workflow to help you get started with Actions

name: Create release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags: [ "v*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        version: ["ubuntu:noble", "ubuntu:jammy", "ubuntu:focal", "debian:trixie", "debian:bookworm", "debian:bullseye"]
      fail-fast: false

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "Compile ${{ matrix.version }} on ${{ matrix.os }}"
        run: |
          ./pullsrc.sh
          docker run --rm -v ${{ github.workspace }}:/work -w /work library/${{ matrix.version }} bash -c "./install_deps.sh && ./compile.sh"

      - name: "Install test with ${{ matrix.version }}"
        run: |
          docker run --rm -v ${{ github.workspace }}:/work -w /work library/${{ matrix.version }} bash -c "apt update && apt install -y --no-install-recommends ./output/*.deb && ssh -V"

      - name: Set artifact name
        id: artifact
        run: echo "name=$(echo ${{ matrix.version }} | sed 's/:/-/g')-${{ matrix.os }}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: ${{ github.workspace }}/output

  create_release:
    # if: ${{ github.ref == 'refs/heads/master' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./output

      - name: Get tag message
        run: |
          echo -e "> Automated release created by GitHub Actions.\n" > ${{ github.workspace }}/RELEASE.md
          GITHUB_REF=${{ github.ref }}
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          git tag -l --format='%(contents)' "${TAG_NAME}" | tee -a ${{ github.workspace }}/RELEASE.md

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/output/*"
          bodyFile: ${{ github.workspace }}/RELEASE.md
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
